---
kind: pipeline
type: docker
name: default
clone:
  depth: 1

steps:
  - name: Install ruby deps
    image: railsme/ruby-chrome:2.7.2-alpine
    environment:
      BUNDLE_PATH: 'vendor/bundle'
      BUNDLE_MIRROR__HTTPS://RUBYGEMS__ORG/: "https://gems.railsme.ninja"
      BUNDLE_GEMS__RAILSME__NINJA:
        from_secret: mirror_credentials
      BUNDLE_HTTPS://GEMS__RAILSME__NINJA/:
        from_secret: mirror_credentials
    volumes:
      - name: ruby_cache
        path: /drone/src/vendor/bundle
    commands:
      - bundle install
    when:
      branch:
        exclude:
          - hotfix/*

  - name: Install node deps
    image: node:12-alpine
    pull: always
    environment:
      RAILS_ENV: test
      NODE_ENV: test
    volumes:
      - name: node_cache
        path: /drone/src/node_modules
    commands:
      - apk add --no-cache git && yarn install
    when:
      branch:
        exclude:
          - hotfix/*

  - name: Frontend Checks
    image: node:12-alpine
    volumes:
      - name: node_cache
        path: /drone/src/node_modules
    commands:
      - yarn lint
      - yarn tsc --noEmit
      - yarn test
    when:
      status: success
      branch:
        exclude:
          - hotfix/*
    depends_on:
      - 'Install node deps'
      - 'Generate translations'

  - name: Generate translations
    image: railsme/ruby-chrome:2.7.2-alpine
    environment:
      BUNDLE_PATH: 'vendor/bundle'
      RAILS_ENV: 'test'
      DBHOST: 'postgres-rspec'
    volumes:
      - name: node_cache
        path: /drone/src/node_modules
      - name: ruby_cache
        path: /drone/src/vendor/bundle
    commands:
      - bundle exec rake i18n:js:export
    when:
      branch:
        exclude:
          - hotfix/*
    depends_on:
      - 'Install node deps'
      - 'Install ruby deps'
      - 'Setup'

  - name: Build webpack for tests
    image: node:12-alpine
    environment:
      RAILS_ENV: test
      NODE_ENV: test
    volumes:
      - name: node_cache
        path: /drone/src/node_modules
    commands:
      - yarn run webpack --config config/webpack/test.js
    when:
      status: success
      branch:
        exclude:
          - hotfix/*
    depends_on:
      - 'Generate translations'

  - name: Setup
    image: railsme/ruby-chrome:2.7.2-alpine
    commands:
      - cp config/drone.database.yml config/database.yml
      - cp config/drone.redis.yml config/redis.yml
      - cp .env.drone .env
    when:
      branch:
        exclude:
          - hotfix/*

  - name: Cucumber
    image: railsme/ruby-chrome:2.7.2-alpine
    environment:
      BUNDLE_PATH: 'vendor/bundle'
      RAILS_ENV: test
      DBHOST: postgres-cucumber
      CUCUMBER_FORMAT: pretty
    volumes:
      - name: node_cache
        path: /drone/src/node_modules
      - name: ruby_cache
        path: /drone/src/vendor/bundle
      - name: tmp_cache
        path: /drone/src/tmp
    commands:
      - bundle exec rake db:test:prepare
      - bundle exec cucumber
    when:
      status: success
      branch:
        exclude:
          - hotfix/*
    depends_on:
      - 'Setup'
      - 'Build webpack for tests'

  - name: RSpec
    image: railsme/ruby-chrome:2.7.2-alpine
    environment:
      BUNDLE_PATH: 'vendor/bundle'
      RAILS_ENV: test
      DBHOST: 'postgres-rspec'
    volumes:
      - name: node_cache
        path: /drone/src/node_modules
      - name: ruby_cache
        path: /drone/src/vendor/bundle
      - name: tmp_cache
        path: /drone/src/tmp
    commands:
      - bundle exec rake db:test:prepare
      - bundle exec rspec -f doc
    when:
      status: success
      branch:
        exclude:
          - hotfix/*
    depends_on:
      - 'Install ruby deps'
      - 'Setup'
      - 'Build webpack for tests'

  - name: Rubocop
    image: railsme/ruby-chrome:2.7.2-alpine
    environment:
      BUNDLE_PATH: 'vendor/bundle'
    volumes:
      - name: node_cache
        path: /drone/src/node_modules
      - name: ruby_cache
        path: /drone/src/vendor/bundle
      - name: tmp_cache
        path: /drone/src/tmp
    commands:
      - bundle exec rubocop --parallel
    when:
      status: success
      branch:
        exclude:
          - hotfix/*
    depends_on:
      - 'Install ruby deps'

  - name: Build production images
    image: railsme/drone-docker-plugin:latest
    privileged: true
    settings:
      dockerfile: .dockerenv/app.dockerfile
      username:
        from_secret: registry_username
      password:
        from_secret: registry_password
      registry: registry.railsme.ninja
      images:
        - name: base
          repository: registry.railsme.ninja/lingu/base
          target: base
        - name: lingu-app
          repository: registry.railsme.ninja/lingu/app
          target: app
      tags:
        - latest
        - ${DRONE_TAG##v}
      cache_from:
        - 'registry.railsme.ninja/lingu/base:latest'
        - 'registry.railsme.ninja/lingu/base:staging'
        - 'registry.railsme.ninja/lingu/app:latest'
    when:
      status: success
      event:
        - tag
    depends_on:
      - 'Cucumber'
      - 'RSpec'
      - 'Rubocop'
      - 'Frontend Checks'

  - name: Production deploy
    image: railsme/drone-kube-deploy:2
    pull: always
    settings:
      k8s_config:
        from_secret: kubeconfig_production
      deployments:
        - name: lingu-background-jobs
          containers:
            - name: lingu-background-jobs
              image: "registry.railsme.ninja/lingu/app:${DRONE_TAG##v}"
          tolerations:
            - key: dedicated
              operator: Equal
              value: background-jobs
              effect: NoSchedule
        - name: lingu-app
          containers:
            - name: lingu-app
              image: "registry.railsme.ninja/lingu/app:${DRONE_TAG##v}"
          initContainers:
            - name: migrate-db
              image: "registry.railsme.ninja/lingu/app:${DRONE_TAG##v}"
              command: ["rails", "db:migrate"]
          tolerations:
            - key: dedicated
              operator: Equal
              value: app
              effect: NoSchedule
    when:
      status: success
      event:
        - tag
    depends_on:
      - 'Build production images'

services:
  - name: postgres-cucumber
    image: postgres:11-alpine
    environment:
      POSTGRES_USER: postgres
      POSTGRES_DB: test
      POSTGRES_HOST_AUTH_METHOD: trust
  - name: postgres-rspec
    image: postgres:11-alpine
    environment:
      POSTGRES_USER: postgres
      POSTGRES_DB: test
      POSTGRES_HOST_AUTH_METHOD: trust
  - name: redis
    image: redis:alpine

volumes:
  - name: node_cache
    host:
      path: /var/lib/cache/lingu-2.7.2/node_cache
  - name: ruby_cache
    host:
      path: /var/lib/cache/lingu-2.7.2/ruby_cache
  - name: tmp_cache
    host:
      path: /var/lib/cache/lingu-2.7.2/tmp_cache
---
kind: signature
hmac: 6efeb9d95a209894f17b91d66d103adb2847f0eb5a5f8bdb1af590044ac25a04

...
